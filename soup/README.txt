ЗАДАНИЕ:
Практическое задание по Beautiful Soup
Часть 1:
В этом задании вам необходимо реализовать парсер для сбора статистики со страниц Википедии.
Чтобы упростить вашу задачу, необходимые страницы уже скачаны и сохранены на файловой системе в
директории wiki/ (Например, страница https://en.wikipedia.org/wiki/Stone_Age сохранена файле wiki/Stone_Age).

Парсер реализован в виде функции parse, которая принимает на вход один параметр: path_to_file — путь до файла,
содержащий html код страницы википедии. Гарантируется, что такой путь существует. Ваша задача — прочитать файл,
пройтись Beautiful Soup по статье, найти её тело (это <div id="bodyContent">) и внутри него подсчитать:

Количество картинок (img) с шириной (width) не меньше 200. Например: <img width="200">, но не <img> и не <img width="199">
Количество заголовков (h1, h2, h3, h4, h5, h6), первая буква текста внутри которых соответствует заглавной букве E, T или C.
Например: <h1>End</h1> или <h5><span>Contents</span></h5>, но не <h1>About</h1> и не <h2>end</h2> и не <h3><span>1</span><span>End</span></h3>
Длину максимальной последовательности ссылок, между которыми нет других тегов, открывающихся или закрывающихся.
Например: <p><span><a></a></span>, <a></a>, <a></a></p> - тут 2 ссылки подряд, т.к. закрывающийся span прерывает последовательность.
<p><a><span></span></a>, <a></a>, <a></a></p> - а тут 3 ссылки подряд, т.к. span находится внутри ссылки, а не между ссылками.
Количество списков (ul, ol), не вложенных в другие списки.
Например: <ol><li></li></ol>, <ul><li><ol><li></li></ol></li></ul> - два не вложенных списка (и один вложенный)
Результатом работы функции parse будет список четырех чисел, посчитанных по формулам выше.

В пункте про последовательность ссылок вы можете ошибиться с результатом, если решите использовать метод find_next().
Обратите внимание, что хотя find_next находит тег, идущий сразу за текущим, этот тег может оказаться вложенным в текущий,
а не быть его следующим соседом. Возможно, нужно использовать другой метод или алгоритм.

Так же, не упустите момент, что данные во всех пунктах нужно искать внутри <div id="bodyContent">, а не по всей странице.

Несколько других примеров работы вы можете посмотреть в тестах из шаблона кода выше.

Во время проверки на сервере будут доступны только стандартные модули и bs4, сеть не доступна.
Ваше решение будет проверяться, как на наборе страниц из приложенного архива, так и на дополнительном наборе страниц википедии.

"Важное замечание! Не используйте для сбора статистики по странице регулярные выражения.
Beautiful Soup в своей работе использует специализированные парсеры, которые позволяют корректно обрабатывать
невалидные (содержащие ошибки, например: незакрытый тег) html страницы. Статистика, собранная с помощью модуля re,
на таких страницах будет возвращать не верное значение."